{"version":3,"sources":["util/index.ts","api/index.ts","pages/Login/index.tsx","pages/UserForm/index.tsx","pages/Admin/index.tsx","routes/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["isValidName","name","test","isValidTelephone","phone","isValidCode","code","isValidIdCardNo","idNo","strictValid","length","substring","idNoWi","idNoWiSum","i","parseInt","idNoMod","idNoLast","isValidStudentNo","stdudentNo","basePath","baseOptions","method","headers","getUserInfoList","data","fetch","body","JSON","stringify","DEFAULT_TIME","withRouter","props","history","useState","localStorage","getItem","telephone","setTelephone","setCode","time","setTime","timeRef","useRef","current","className","placeholder","size","value","onChange","event","target","suffix","type","style","color","onClick","message","error","timer","setInterval","clearInterval","phoneNumber","then","success","catch","err","console","disabled","res","json","msg","removeItem","setItem","push","queryAdminId","qs","parse","location","search","adminId","transAdminId","localTel","setName","id","setId","studentNo","setStudentNo","userSubmitInfo","setUserSubmitInfo","isConfirmed","setIsConfirmed","setLocalName","val","setLocalId","setLocalStudentNo","useEffect","studentNumber","credentialNo","form","e","setLocalTelephone","Promise","resolve","reject","administratorId","warning","info","DEFAULT_CACHE_TIME","password","setPassword","localHasAuthed","isAuthInDate","Math","floor","Date","now","hasAuthed","setHasAuthed","unConfirmedList","setUnConfirmedList","confirmedList","setConfirmedList","showListType","setShowListType","setAdministratorId","update","setUpdate","handleConfirm","opType","withOutAuth","Password","withAuth","defaultActiveKey","key","TabPane","tab","map","sysCtime","routeConfig","path","component","Login","UserForm","Admin","Routes","height","route","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a9a8f43b.chunk.js","sourcesContent":["export function isValidName(name: string): boolean {\r\n    return /^([\\u3400-\\u4DFFh]|[\\u4E00-\\u9fa5]){1,15}[·.]?([\\u3400-\\u4DFFh]|[\\u4E00-\\u9fa5]){1,15}$/g.test(name);\r\n}\r\n\r\nexport function isValidTelephone(phone: string): boolean {\r\n    return /^[19]\\d{10}$/.test(phone);\r\n}\r\n\r\n/**\r\n * 是否合法验证码\r\n * @param { string } code - 验证码字符串\r\n * @return { boolean }\r\n */\r\nexport function isValidCode(code: string): boolean {\r\n    return /^\\d{6}$/.test(code);\r\n}\r\n\r\nexport function isValidIdCardNo(idNo: string, strictValid: boolean = true): boolean {\r\n    const birthReg = /^(?:19\\d{2}|20[01]\\d)(?:1[0-2]|0?[1-9])(?:3[01]|[12][0-9]|0?[1-9])$/;\r\n    if ( // 非空\r\n        !idNo\r\n        // 长度18位\r\n        ||\r\n        idNo.length !== 18\r\n        // 前17位是否为数字\r\n        ||\r\n        !/^[0-9]*$/.test(idNo.substring(0, 17))\r\n        // 最后一位是否是数字或者X\r\n        ||\r\n        !/^[0-9Xx]{1}$/.test(idNo.substring(17))\r\n        // 生日是否符合规则\r\n        ||\r\n        !birthReg.test(idNo.substring(6, 14))) {\r\n        return false;\r\n    }\r\n\r\n    if (!strictValid) {\r\n        return true;\r\n    }\r\n\r\n    // 如果通过该验证，说明身份证格式正确，但准确性还需计算\r\n\r\n    const idNoWi = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]; // 将前17位加权因子保存在数组里\r\n    const idNoY = [1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2]; // 这是除以11后，可能产生的11位余数、验证码，也保存成数组\r\n    let idNoWiSum = 0; // 用来保存前17位各自乖以加权因子后的总和\r\n    for (let i = 0; i < 17; i += 1) {\r\n        idNoWiSum += parseInt(idNo.substring(i, i + 1)) * idNoWi[i];\r\n    }\r\n\r\n    const idNoMod = idNoWiSum % 11; // 计算出校验码所在数组的位置\r\n    const idNoLast = idNo.substring(17); // 得到最后一位身份证号码\r\n\r\n    // 如果等于2，则说明校验码是10，身份证号码最后一位应该是X\r\n    if (idNoMod === 2) {\r\n        return idNoLast === 'X' || idNoLast === 'x';\r\n    }\r\n\r\n    // 用计算出的验证码与最后一位身份证号码匹配，如果一致，说明通过，否则是无效的身份证号码\r\n    return parseInt(idNoLast) === idNoY[idNoMod];\r\n}\r\n\r\n/**\r\n * 校验邮箱\r\n * @param {string} email - 邮箱号码字符串\r\n * @return {boolean}\r\n */\r\nexport function isValidEmail(email: string): boolean {\r\n    return /^[\\w+-]+(\\.[\\w+-]+)*@[a-z\\d-]+(\\.[a-z\\d-]+)*\\.([a-z]{2,4})$/i.test(email);\r\n}\r\n\r\nexport function isValidStudentNo(stdudentNo: string): boolean {\r\n    return /^[A-Za-z0-9]{8}$/.test(stdudentNo);\r\n}\r\n\r\nexport function isValidPassword(password: string) : boolean {\r\n    return /^[A-Za-z0-9]+$/.test(password);\r\n}","const basePath = 'https://growthmind.xyz/api';\r\n\r\n// 生成一个配置 \r\nconst baseOptions = {\r\n    method: 'POST',//post请求 \r\n    headers: { \r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n    }\r\n}\r\n\r\nexport function getMessageCode(data: {\r\n    phoneNumber: string\r\n}) {\r\n    return fetch(`${basePath}/getMessageCode`, {\r\n        ...baseOptions,\r\n        body: JSON.stringify({\r\n            ...data\r\n        })\r\n    });\r\n}\r\n\r\nexport function checkMessageCode(data: {\r\n    phoneNumber: string,\r\n    code: string\r\n}) {\r\n    return fetch(`${basePath}/checkMessageCode`, {\r\n        ...baseOptions,\r\n        body: JSON.stringify({\r\n            ...data\r\n        })\r\n    });\r\n}\r\n\r\nexport function getUserInfoByPhoneNo(data: {\r\n    phoneNumber: string\r\n}) {\r\n    return fetch(`${basePath}/getUserInfoByPhoneNo`, {\r\n        ...baseOptions,\r\n        body: JSON.stringify({\r\n            ...data\r\n        })\r\n    })  \r\n}\r\n\r\nexport function saveUserInfo(data: {\r\n    studentNumber: string,\r\n    phoneNumber: string,\r\n    name: string,\r\n    credentialNo: string,\r\n    administratorId: string\r\n}) {\r\n    return fetch(`${basePath}/saveUserInfo`, {\r\n        ...baseOptions,\r\n        body: JSON.stringify({\r\n            ...data\r\n        })\r\n    });\r\n}\r\n\r\n\r\n// opType = \"UNCONFIRMED\" / \"CONFIRMED\"/\r\nexport function getUserInfoList(data: {\r\n    opType: string,\r\n    administratorId: string\r\n}) {\r\n    return fetch(`${basePath}/getUserInfoList`, {\r\n        ...baseOptions,\r\n        body: JSON.stringify({\r\n            ...data\r\n        })\r\n    })\r\n}\r\n\r\nexport function confirmPay(data: {\r\n    phoneNumber: string\r\n}) {\r\n    return fetch(`${basePath}/confirmPay`, {\r\n        ...baseOptions,\r\n        body: JSON.stringify({\r\n            ...data\r\n        })\r\n    });\r\n}","import React, { ChangeEvent, useState, useRef } from 'react';\r\nimport { Button, Input, message, Icon } from 'antd';\r\nimport { isValidTelephone, isValidCode } from '../../util/index';\r\nimport { getMessageCode, checkMessageCode } from '../../api/index';\r\nimport './index.css';\r\nimport { withRouter } from 'react-router';\r\n\r\nconst DEFAULT_TIME = 60;\r\n\r\nfunction Login(props: any) {\r\n    const { history } = props;\r\n\r\n    const [telephone, setTelephone] = useState(localStorage.getItem('telephone') || '');\r\n    const [code, setCode] = useState('');\r\n    const [time, setTime] = useState(DEFAULT_TIME);\r\n    const timeRef = useRef(time);\r\n    timeRef.current = time;\r\n\r\n    function handlePhoneChange(event: ChangeEvent<HTMLInputElement>) {\r\n        const value = event.target.value;\r\n        setTelephone(value);\r\n    }\r\n\r\n    function handleCodeChange(event: ChangeEvent<HTMLInputElement>) {\r\n        const value = event.target.value;\r\n        setCode(`${value}`);\r\n    }\r\n\r\n    function handleSendVertifyCode() {\r\n        if(!isValidTelephone(telephone)) {\r\n            return message.error('手机号填写错误');\r\n        }\r\n        \r\n        const timer = setInterval(() => {\r\n            setTime(timeRef.current - 1);\r\n            if (timeRef.current < 0) {\r\n                clearInterval(timer);\r\n                setTime(DEFAULT_TIME)\r\n            }\r\n        }, 1000);\r\n\r\n        getMessageCode({ phoneNumber: telephone }).then(() => {\r\n            message.success('验证码已发送');\r\n        }).catch(err => {\r\n            console.error(err);\r\n            message.error('服务器异常');\r\n        })\r\n\r\n    }\r\n\r\n    function handleLogin() {\r\n        if(!isValidCode(code)) {\r\n            return message.error('验证码格式错误');\r\n        }\r\n        if(!isValidTelephone(telephone)) {\r\n            return message.error('手机号填写错误');\r\n        }\r\n        checkMessageCode({ phoneNumber: telephone, code })\r\n            .then(res => res.json())\r\n            .then((res: {\r\n                code: number,\r\n                msg: string\r\n            }) => {\r\n                if(res && res.code) {\r\n                    return message.error(res.msg);\r\n                }\r\n\r\n                if(localStorage.getItem('telephone')) localStorage.removeItem('telephone');\r\n                localStorage.setItem('telephone', telephone);\r\n\r\n                return history.push('/userForm');\r\n            })\r\n\r\n    }\r\n\r\n    return <div className=\"login\">\r\n            <header className=\"login__header\">登录</header>\r\n            <div className=\"login__input\">\r\n                <Input\r\n                    placeholder=\"请输入手机号\"\r\n                    size=\"large\"\r\n                    value={telephone}\r\n                    onChange={handlePhoneChange}\r\n                    suffix={\r\n                        !telephone\r\n                            ? <span />\r\n                            : isValidTelephone(telephone)\r\n                                ? <Icon type=\"check-circle\" style={{ color: 'rgba(0, 255, 0, .45)' }} />\r\n                                : <Icon type=\"exclamation-circle\" style={{ color: 'rgba(255, 0, 0, .45)' }} />\r\n                    }\r\n                />\r\n            </div>\r\n            <div className=\"login__input login__vertify-code\">\r\n                <Input\r\n                    className=\"login__vertify-code-input\"\r\n                    value={code}\r\n                    size=\"large\"\r\n                    placeholder=\"请输入验证码\"\r\n                    onChange={handleCodeChange}\r\n                    suffix={\r\n                        !code\r\n                            ? <span />\r\n                            : isValidCode(code)\r\n                                ? <Icon type=\"check-circle\" style={{ color: 'rgba(0, 255, 0, .45)' }} />\r\n                                : <Icon type=\"exclamation-circle\" style={{ color: 'rgba(255, 0, 0, .45)' }} />\r\n                    }\r\n                />\r\n                { time === DEFAULT_TIME \r\n                    ? <Button type=\"primary\" size=\"large\" onClick={handleSendVertifyCode}>发送验证码</Button>\r\n                    : <Button type=\"primary\" size=\"large\" disabled>{time}秒后重试</Button>\r\n                }\r\n            </div>\r\n            <Button className=\"login__submit\" size=\"large\" type=\"primary\" onClick={handleLogin}>登录</Button>\r\n        </div>;\r\n}\r\n\r\nexport default withRouter(Login);","import React, { useState, ChangeEvent, useEffect } from 'react';\r\nimport qs from 'query-string';\r\nimport { Input, Button, message, Icon } from 'antd';\r\nimport { saveUserInfo, getUserInfoByPhoneNo } from '../../api/index';\r\nimport { isValidTelephone, isValidName, isValidIdCardNo, isValidStudentNo } from '../../util/index';\r\nimport './index.css';\r\nimport { withRouter } from 'react-router';\r\n\r\nfunction UserForm(props: any) {\r\n    const queryAdminId = qs.parse(props.location.search).adminId;\r\n    const transAdminId = typeof queryAdminId === 'string' ? queryAdminId : '';\r\n    const [adminId] =  useState(localStorage.getItem('adminId') || transAdminId);\r\n    if(adminId) {\r\n        if(localStorage.getItem('adminId')) localStorage.removeItem('adminId');\r\n        localStorage.setItem('adminId', adminId);\r\n    }\r\n    const localTel = localStorage.getItem('telephone') || '';\r\n    if(!localTel || !isValidTelephone(localTel)) {\r\n        props.history.push('/login');\r\n    }\r\n    const [telephone, setTelephone] = useState(localTel);\r\n\r\n    const [name, setName] = useState(localStorage.getItem('name') || '');\r\n    const [id, setId] = useState(localStorage.getItem('id') || '');\r\n    const [studentNo, setStudentNo] = useState(localStorage.getItem('studentNo') || '');\r\n\r\n    const [userSubmitInfo, setUserSubmitInfo] = useState(localStorage.getItem(`${name}_${id}_${studentNo}_${telephone}_has_submited`) || '');\r\n    const [isConfirmed, setIsConfirmed] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if(!isValidTelephone(telephone)) return;\r\n        getUserInfoByPhoneNo({ phoneNumber: telephone })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                const { name = '', studentNumber = '', credentialNo = '', isConfirmed = 0 } = res || {};\r\n                setLocalName(name);\r\n                setLocalStudentNo(studentNumber);\r\n                setLocalId(credentialNo);\r\n                setIsConfirmed(isConfirmed);\r\n                if(isConfirmed === 1) setUserSubmitInfo('1');\r\n            })\r\n    }, [telephone]);\r\n\r\n    function handleChangeName(e:ChangeEvent<HTMLInputElement>) {\r\n        const val = e.target.value;\r\n        setLocalName(val);\r\n    }\r\n\r\n    function handleChangeId(e:ChangeEvent<HTMLInputElement>) {\r\n        const val = e.target.value;\r\n        setLocalId(val);\r\n    }\r\n\r\n    function handleChangeStudentNo(e:ChangeEvent<HTMLInputElement>) {\r\n        const val = e.target.value;\r\n        setLocalStudentNo(val);\r\n    }\r\n\r\n    function handleChangeTelephone(e:ChangeEvent<HTMLInputElement>) {\r\n        const val = e.target.value;\r\n        setLocalTelephone(val);\r\n    }\r\n\r\n    function setLocalName(val: string) {\r\n        setName(val);\r\n        if (val && isValidName(val)) {\r\n            if(localStorage.getItem('name')) localStorage.removeItem('name');\r\n            localStorage.setItem('name', val);\r\n        }\r\n    }\r\n\r\n    function setLocalId(val: string) {\r\n        setId(val);\r\n        if (val && isValidIdCardNo(val)) {\r\n            if(localStorage.getItem('id')) localStorage.removeItem('id');\r\n            localStorage.setItem('id', val);\r\n        }\r\n    }\r\n\r\n    function setLocalStudentNo(val: string) {\r\n        setStudentNo(val);\r\n        if (val && isValidStudentNo(val)) {\r\n            if(localStorage.getItem('studentNo')) localStorage.removeItem('studentNo');\r\n            localStorage.setItem('studentNo', val);\r\n        }\r\n    }\r\n\r\n    function setLocalTelephone(val: string) {\r\n        setTelephone(val);\r\n        if (val && isValidTelephone(val)) {\r\n            if(localStorage.getItem('telephone')) localStorage.removeItem('telephone');\r\n            localStorage.setItem('telephone', val);\r\n        }\r\n    }\r\n\r\n    function beforeSubmit() {\r\n        return new Promise((resolve, reject) => {\r\n            if (isValidTelephone(telephone) && isValidName(name) && isValidIdCardNo(id) && isValidStudentNo(studentNo)) {\r\n                if(userSubmitInfo && userSubmitInfo === `${name}_${id}_${studentNo}_${telephone}_has_submited` || localStorage.getItem(`${name}_${id}_${studentNo}_${telephone}_has_submited`)) {\r\n                    setUserSubmitInfo('1');\r\n                    return reject('你已完成信息提交');\r\n                }\r\n                return resolve('输入校验完成');\r\n            }\r\n            return reject('信息填写错误');\r\n        });\r\n    }\r\n\r\n    function handleSubmit() {\r\n        beforeSubmit().then(() => {\r\n            saveUserInfo({\r\n                studentNumber: studentNo,\r\n                phoneNumber: telephone,\r\n                name,\r\n                credentialNo: id,\r\n                administratorId: adminId\r\n            }).then(() => {\r\n                setUserSubmitInfo('1');\r\n                localStorage.setItem(`${name}_${id}_${studentNo}_${telephone}_has_submited`, '1');\r\n                message.success('信息提交成功');\r\n            }).catch(err => {\r\n                console.error(err);\r\n                message.error('服务器异常');\r\n            })\r\n        }).catch((err) => {\r\n            message.warning(err);\r\n        })\r\n    }\r\n\r\n    function handleReSubmit() {\r\n        setUserSubmitInfo('');\r\n    }\r\n\r\n    const form = \r\n        <div className=\"user-form\">\r\n            <header className=\"user-form__header\">填写信息</header>\r\n            <div className=\"user-form__input\">\r\n                <label className=\"user-form__input-name\">姓名</label>:\r\n                 <Input\r\n                    className=\"user-form__input-content\"\r\n                    placeholder=\"请输入姓名\"\r\n                    size=\"large\"\r\n                    value={name}\r\n                    onChange={handleChangeName}\r\n                    suffix={\r\n                        !name \r\n                            ? <span />\r\n                            : isValidName(name)\r\n                                ? <Icon type=\"check-circle\" style={{ color: 'rgba(0, 255, 0, .45)' }} />\r\n                                : <Icon type=\"exclamation-circle\" style={{ color: 'rgba(255, 0, 0, .45)' }}/>\r\n                    }\r\n                />\r\n            </div>\r\n            <div className=\"user-form__input\">\r\n                <label className=\"user-form__input-name\">身份证</label>:\r\n                <Input\r\n                    className=\"user-form__input-content\"\r\n                    placeholder=\"请输入身份证\"\r\n                    size=\"large\"\r\n                    value={id}\r\n                    onChange={handleChangeId}\r\n                    suffix={\r\n                        !id\r\n                            ? <span />\r\n                            : isValidIdCardNo(id)\r\n                                ? <Icon type=\"check-circle\" style={{ color: 'rgba(0, 255, 0, .45)' }} />\r\n                                : <Icon type=\"exclamation-circle\" style={{ color: 'rgba(255, 0, 0, .45)' }}/>\r\n                    } \r\n                />\r\n            </div>\r\n            <div className=\"user-form__input\">\r\n                <label className=\"user-form__input-name\">学号</label>:\r\n                <Input className=\"user-form__input-content\" \r\n                    placeholder=\"请输入学号\"\r\n                    size=\"large\"\r\n                    value={studentNo}\r\n                    onChange={handleChangeStudentNo}\r\n                    suffix={\r\n                        !studentNo\r\n                            ? <span />\r\n                            : isValidStudentNo(studentNo)\r\n                                ? <Icon type=\"check-circle\" style={{ color: 'rgba(0, 255, 0, .45)' }} />\r\n                                : <Icon type=\"exclamation-circle\" style={{ color: 'rgba(255, 0, 0, .45)' }} />\r\n                    }\r\n                />\r\n            </div>\r\n            <div className=\"user-form__input\">\r\n                <label className=\"user-form__input-name\">手机号</label>:\r\n                { isValidTelephone(telephone)\r\n                    ? <div className=\"user-form__input-content\">{telephone}</div>\r\n                    : <Input\r\n                        className=\"user-form__input-content\"\r\n                        placeholder=\"请输入手机号\"\r\n                        size=\"large\"\r\n                        value={telephone}\r\n                        onChange={handleChangeTelephone}\r\n                        suffix={\r\n                            !telephone\r\n                                ? <span />\r\n                                : isValidTelephone(telephone)\r\n                                    ? <Icon type=\"check-circle\" style={{ color: 'rgba(0, 255, 0, .45)' }} />\r\n                                    : <Icon type=\"exclamation-circle\" style={{ color: 'rgba(255, 0, 0, .45)' }} />\r\n                        }\r\n                    />\r\n                }\r\n            </div>\r\n            <Button className=\"user-form__submit\" size=\"large\" type=\"primary\" onClick={handleSubmit}>提交</Button>\r\n        </div>;\r\n\r\n    const info = \r\n        <div className=\"user-form\">\r\n            <header className=\"user-form__header\">个人信息</header>\r\n            <div className=\"user-form__input\">\r\n                <label className=\"user-form__input-name user-form__info\">姓名</label>:\r\n                <div className=\"user-form__input-content\">{name}</div>\r\n            </div>\r\n            <div className=\"user-form__input\">\r\n                <label className=\"user-form__input-name user-form__info\">身份证</label>:\r\n                <div className=\"user-form__input-content\">{id}</div>\r\n            </div>\r\n            <div className=\"user-form__input\">\r\n                <label className=\"user-form__input-name user-form__info\">学号</label>:\r\n                <div className=\"user-form__input-content\">{studentNo}</div>\r\n            </div>\r\n            <div className=\"user-form__input\">\r\n                <label className=\"user-form__input-name user-form__info\">手机号</label>:\r\n                <div className=\"user-form__input-content\">{telephone}</div>\r\n            </div>\r\n            <div className=\"user-form__input\">\r\n                <label className=\"user-form__input-name user-form__info\">缴费状态</label>:\r\n                <div className=\"user-form__input-content\">{isConfirmed === 0 ? '未确认' : '已确认' }</div>\r\n            </div>\r\n            <div className=\"user-form__input userForm_toptip\"> 个人信息已提交，请找工作人员缴费。若信息有误，请找工作人员备注 </div>\r\n            {/* { isConfirmed === 0\r\n                ? <Button className=\"user-form__submit\" size=\"large\" type=\"primary\" onClick={handleReSubmit}>重新提交</Button>\r\n                : <span />\r\n            } */}\r\n\r\n        </div>;\r\n    return userSubmitInfo ? info : form;\r\n}\r\n\r\nexport default withRouter(UserForm);\r\n","import React, { useState, useEffect, ChangeEvent } from 'react';\r\nimport { Input, Button, message, Tabs } from 'antd';\r\nimport { getUserInfoList, confirmPay } from '../../api/index';\r\nimport './index.css';\r\nimport { withRouter } from 'react-router';\r\nconst DEFAULT_CACHE_TIME = 1 // 单位hour\r\n\r\ninterface userInfo {\r\n    id: string,\r\n    name: string,\r\n    studentNumber: string,\r\n    phoneNumber: string,\r\n    credentialNo: string,\r\n    sysCtime: string,\r\n    isConfirmed: number\r\n}\r\n\r\nfunction Admin() {\r\n    const [password, setPassword] = useState('');\r\n    const localHasAuthed = parseInt(localStorage.getItem('hasAuthed') || '0');\r\n    const isAuthInDate = Math.floor((Date.now() - localHasAuthed)/1000) < 3600 * DEFAULT_CACHE_TIME;\r\n    const [hasAuthed, setHasAuthed] = useState(isAuthInDate || false);\r\n    const [unConfirmedList, setUnConfirmedList] = useState([]);\r\n    const [confirmedList, setConfirmedList] = useState([]);\r\n    const [showListType, setShowListType] = useState('unConfirmed');\r\n    const [administratorId, setAdministratorId] = useState(localStorage.getItem('administratorId') || '');\r\n\r\n    const [update, setUpdate] = useState(0);\r\n\r\n    useEffect(() => {\r\n        getUserInfoList({ opType: \"UNCONFIRMED\",  administratorId })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setUnConfirmedList(data || []);\r\n            });\r\n\r\n        getUserInfoList({ opType: \"CONFIRMED\" ,  administratorId })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setConfirmedList(data || []);\r\n            });\r\n    }, [update, administratorId])\r\n\r\n    function handleChangePassword(e:ChangeEvent<HTMLInputElement>) {\r\n        const val = e.target.value;\r\n        setPassword(val);\r\n    }\r\n\r\n    function handleAdministratorId(e:ChangeEvent<HTMLInputElement>) {\r\n        const val = e.target.value;\r\n        setAdministratorId(val);\r\n    }\r\n\r\n    function handleLogin() {\r\n        if(password === 'nidemingzi') {\r\n            setHasAuthed(true);\r\n            if(localStorage.getItem('hasAuthed')) localStorage.removeItem('hasAuthed');\r\n            localStorage.setItem('hasAuthed', `${Date.now()}`);\r\n\r\n            if(localStorage.getItem('administratorId')) localStorage.removeItem('administratorId');\r\n            localStorage.setItem('administratorId', administratorId);\r\n            setUpdate(update + 1);\r\n        } else {\r\n            message.error('密码输入错误');\r\n        }\r\n    }\r\n\r\n    function handleLogout() {\r\n        setHasAuthed(false);\r\n        setAdministratorId('');\r\n        if(localStorage.getItem('hasAuthed')) localStorage.removeItem('hasAuthed');\r\n        if(localStorage.getItem('administratorId')) localStorage.removeItem('administratorId');\r\n    }\r\n\r\n    function handleShowInfo(key: string) {\r\n        setShowListType(key);\r\n    }\r\n\r\n    function handleConfirm(info: userInfo) {\r\n        confirmPay({ phoneNumber: info.phoneNumber }).then(() => {\r\n            setUpdate(update+1);\r\n            message.success('已确认')\r\n        }).catch(err => {\r\n            message.error(err);\r\n        })\r\n    }\r\n\r\n    const withOutAuth = \r\n        <div className=\"user-form\">\r\n            <header className=\"login__header\">管理员登录</header>\r\n            <div className=\"user-form__input\">\r\n                <label className=\"user-form__input-name\">ID</label>:\r\n                <Input\r\n                    className=\"user-form__input-content\"\r\n                    placeholder=\"请输入管理员ID\"\r\n                    size=\"large\"\r\n                    value={administratorId}\r\n                    onChange={handleAdministratorId}\r\n                />\r\n            </div>\r\n            <div className=\"user-form__input\">\r\n                <label className=\"user-form__input-name\">密码</label>:\r\n                <Input.Password\r\n                    className=\"user-form__input-content\"\r\n                    placeholder=\"请输入密码\"\r\n                    size=\"large\"\r\n                    value={password}\r\n                    onChange={handleChangePassword}\r\n                />\r\n            </div>\r\n            <Button className=\"user-form__submit admin_submit\" size=\"large\" type=\"primary\" onClick={handleLogin}>登录</Button>\r\n        </div>\r\n\r\n    const withAuth = \r\n        <div className=\"admin\">\r\n            <header className=\"admin__header\">\r\n                <span>信息</span>\r\n                <Button className=\"admin__logout\" type=\"primary\" onClick={handleLogout}>退出登录</Button>\r\n            </header>\r\n\r\n            <Tabs defaultActiveKey=\"1\" onChange={handleShowInfo}>\r\n                <Tabs.TabPane tab={`未确认 ( ${unConfirmedList.length} )`} key=\"unConfirmed\" />\r\n                <Tabs.TabPane tab={`已确认 ( ${confirmedList.length} )`} key=\"confirmed\" />\r\n            </Tabs>\r\n            { (showListType === 'confirmed' ? confirmedList: unConfirmedList).map((info: userInfo) => {\r\n                return (\r\n                <div key={info.id} >\r\n                    <div className=\"admin__item\">\r\n                        <div className=\"admin__item-user-info\">\r\n                            <div className=\"admin__item-user-info-item\">姓名：{info.name}</div>\r\n                            <div className=\"admin__item-user-info-item\">学号：{info.studentNumber}</div>\r\n                            <div className=\"admin__item-user-info-item\">手机号：{info.phoneNumber}</div>\r\n                            <div className=\"admin__item-user-info-item\">身份证：{info.credentialNo}</div>\r\n                            <div className=\"admin__item-user-info-item\">时间：{info.sysCtime}</div>\r\n                        </div>\r\n                        { info.isConfirmed === 0\r\n                            ? <Button className=\"admin__item-confirm-buttom\" type=\"primary\" onClick={() => {handleConfirm(info)}}> 确认已付款 </Button>\r\n                            : <div className=\"admin__item-confirm-buttom\" >已确认</div> }\r\n                    </div>\r\n                </div>)\r\n            }) }\r\n        </div>\r\n    \r\n    return hasAuthed ? withAuth : withOutAuth;\r\n}\r\n\r\nexport default withRouter(Admin);\r\n","import React from 'react';\nimport Login from '../pages/Login/index';\nimport UserForm from '../pages/UserForm/index';\nimport Admin from '../pages/Admin/index';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// then our route config\nconst routeConfig= [\n    {\n        path: \"/login\",\n        component: Login\n    },\n    {\n        path: \"/userForm\",\n        component: UserForm\n    },\n    {\n        path: \"/admin\",\n        component: Admin\n    },\n];\n\nfunction Routes() {\n    return ( \n        <Router>\n            <div style={{height:'100%'}}>\n                <Switch>\n                    { routeConfig.map((route, i) => <Route path={route.path} key={i} component={route.component} />) }\n                </Switch>\n            </div>\n      </Router>\n    )\n}\n\nexport default Routes;","import React from 'react';\nimport './App.css';\nimport Routes from './routes/index';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n        <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}